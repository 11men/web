{"version":3,"file":"static/js/654.6d8bee62.chunk.js","mappings":"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","sources":["components/temp/RandomKeywordPicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './RandomKeywordPicker.css';\n\ninterface Question {\n  category: string;\n  text: string;\n}\n\nconst questions: Question[] = [\n  // 성장과 도전\n  { category: \"성장과 도전\", text: \"슬럼프를 극복했던 경험이 있나요?\" },\n  { category: \"성장과 도전\", text: \"최근에 가장 큰 성취감이나 보람을 느낀 순간은 언제인가요?\" },\n  { category: \"성장과 도전\", text: \"실패를 통해 배운 가장 큰 교훈은 무엇인가요?\" },\n  { category: \"성장과 도전\", text: \"자신이 가장 성장했다고 느꼈던 순간은 언제였나요?\" },\n  { category: \"성장과 도전\", text: \"과거의 나에게 한 가지 조언을 한다면 무엇을 말하고 싶나요?\" },\n  \n  // 일과 삶의 균형\n  { category: \"일과 삶의 균형\", text: \"당신의 완벽한 하루는 어떤 모습인가요?\" },\n  { category: \"일과 삶의 균형\", text: \"일과 삶의 균형을 맞추기 위해 어떤 노력을 하고 있나요?\" },\n  { category: \"일과 삶의 균형\", text: \"스트레스를 관리하거나 풀기 위해 가장 효과적인 방법은 무엇인가요?\" },\n  { category: \"일과 삶의 균형\", text: \"가장 기억에 남는 휴식 방법은 무엇이었나요?\" },\n  { category: \"일과 삶의 균형\", text: \"번아웃을 방지하기 위해 어떤 루틴을 만들고 있나요?\" },\n  \n  // 커리어와 자기 계발\n  { category: \"커리어와 자기 계발\", text: \"이직이나 커리어 전환을 고민했던 적이 있나요? 그 이유는 무엇인가요?\" },\n  { category: \"커리어와 자기 계발\", text: \"지금 하고 있는 일을 선택한 이유는 무엇인가요?\" },\n  { category: \"커리어와 자기 계발\", text: \"새로운 기술이나 도전에 대한 두려움을 극복하는 방법은 무엇인가요?\" },\n  { category: \"커리어와 자기 계발\", text: \"당신이 가장 존경하는 롤모델은 누구이며, 그 이유는 무엇인가요?\" },\n  { category: \"커리어와 자기 계발\", text: \"자신의 커리어에서 가장 도전적이었던 프로젝트는 무엇인가요?\" },\n  \n  // 영감과 동기\n  { category: \"영감과 동기\", text: \"당신에게 가장 큰 영감을 주는 사람이나 사건은 무엇인가요?\" },\n  { category: \"영감과 동기\", text: \"최근에 읽거나 본 콘텐츠 중에서 가장 마음에 남은 것은 무엇인가요?\" },\n  { category: \"영감과 동기\", text: \"자신을 계속 앞으로 나아가게 만드는 원동력은 무엇인가요?\" },\n  { category: \"영감과 동기\", text: \"무기력함을 느낄 때 어떻게 다시 동기를 찾나요?\" },\n  { category: \"영감과 동기\", text: \"어릴 적 꿈과 현재의 나는 얼마나 닮아 있나요?\" },\n  \n  // 관계와 공감\n  { category: \"관계와 공감\", text: \"다른 사람들과 일할 때 가장 중요하게 여기는 가치는 무엇인가요?\" },\n  { category: \"관계와 공감\", text: \"누군가에게 큰 도움을 받았던 기억이 있나요?\" },\n  { category: \"관계와 공감\", text: \"타인과의 갈등을 해결했던 가장 효과적인 방법은 무엇인가요?\" },\n  { category: \"관계와 공감\", text: \"가장 감사했던 순간은 언제인가요?\" },\n  { category: \"관계와 공감\", text: \"나를 가장 잘 이해해주는 사람은 누구인가요?\" },\n  \n  // 취미와 개인적인 관심사\n  { category: \"취미와 개인적인 관심사\", text: \"최근에 새로 시작한 취미나 관심사는 무엇인가요?\" },\n  { category: \"취미와 개인적인 관심사\", text: \"어린 시절부터 지금까지 좋아했던 활동 중에서 꾸준히 하고 있는 것이 있나요?\" },\n  { category: \"취미와 개인적인 관심사\", text: \"만약 제한 없이 무엇이든 할 수 있다면, 무엇을 해보고 싶나요?\" },\n  { category: \"취미와 개인적인 관심사\", text: \"가장 몰입했던 순간은 언제인가요?\" },\n  { category: \"취미와 개인적인 관심사\", text: \"당신에게 완벽한 여행지는 어디인가요?\" },\n  \n  // 미래와 꿈\n  { category: \"미래와 꿈\", text: \"10년 후의 나는 어떤 모습이길 바라나요?\" },\n  { category: \"미래와 꿈\", text: \"앞으로 꼭 도전해보고 싶은 것은 무엇인가요?\" },\n  { category: \"미래와 꿈\", text: \"세상을 바꾸는 데 기여할 수 있다면 어떤 방식으로 기여하고 싶나요?\" },\n  { category: \"미래와 꿈\", text: \"당신의 인생에서 가장 중요한 가치는 무엇인가요?\" },\n  { category: \"미래와 꿈\", text: \"죽기 전에 반드시 이루고 싶은 한 가지는 무엇인가요?\" },\n  \n  // 철학적/자기 성찰\n  { category: \"철학적/자기 성찰\", text: \"삶에서 가장 소중한 것은 무엇인가요?\" },\n  { category: \"철학적/자기 성찰\", text: \"가장 후회되는 일은 무엇이며, 그것을 어떻게 받아들였나요?\" },\n  { category: \"철학적/자기 성찰\", text: \"행복이란 무엇이라고 생각하나요?\" },\n  { category: \"철학적/자기 성찰\", text: \"시간을 되돌릴 수 있다면 어떤 순간으로 돌아가고 싶나요?\" },\n  { category: \"철학적/자기 성찰\", text: \"스스로를 정의한다면, 당신은 어떤 사람인가요?\" }\n];\n\nconst RandomKeywordPicker: React.FC = () => {\n  const [availableQuestions, setAvailableQuestions] = useState<Question[]>([...questions]);\n  const [currentQuestion, setCurrentQuestion] = useState<Question | null>(null);\n  const [history, setHistory] = useState<Question[]>([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n\n  const pickRandomQuestion = () => {\n    if (availableQuestions.length === 0) {\n      alert('모든 질문을 뽑았습니다! 리셋 버튼을 눌러주세요.');\n      return;\n    }\n\n    setIsAnimating(true);\n    \n    // 애니메이션 효과\n    setTimeout(() => {\n      const randomIndex = Math.floor(Math.random() * availableQuestions.length);\n      const selected = availableQuestions[randomIndex];\n      \n      // 선택된 질문을 제거하고 상태 업데이트\n      const newAvailable = availableQuestions.filter((_, index) => index !== randomIndex);\n      setAvailableQuestions(newAvailable);\n      \n      // 현재 질문이 있으면 히스토리에 추가\n      if (currentQuestion) {\n        setHistory([currentQuestion, ...history]);\n      }\n      \n      setCurrentQuestion(selected);\n      setIsAnimating(false);\n      \n      // 마지막 질문인 경우 축하 효과\n      if (newAvailable.length === 0) {\n        setShowConfetti(true);\n        setTimeout(() => setShowConfetti(false), 3000);\n      }\n    }, 500);\n  };\n\n  const reset = () => {\n    setAvailableQuestions([...questions]);\n    setCurrentQuestion(null);\n    setHistory([]);\n  };\n\n  return (\n    <div className=\"keyword-picker-container\">\n      <div className=\"keyword-picker\">\n        <h1>🎲 랜덤 질문 뽑기</h1>\n        \n        <div className=\"stats\">\n          <span>전체 {questions.length}</span>\n          <span>남음 {availableQuestions.length}</span>\n          <span>뽑음 {questions.length - availableQuestions.length}</span>\n        </div>\n\n        <div className=\"current-question-area\">\n          {currentQuestion ? (\n            <div className={`current-question ${isAnimating ? 'animating' : ''}`}>\n              <div className=\"category-badge\">{currentQuestion.category}</div>\n              <h2>{currentQuestion.text}</h2>\n            </div>\n          ) : (\n            <div className=\"placeholder\">\n              <p>버튼을 눌러 질문을 뽑아보세요!</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"button-group\">\n          <button \n            className=\"pick-button\"\n            onClick={pickRandomQuestion}\n            disabled={availableQuestions.length === 0 || isAnimating}\n          >\n            {isAnimating ? '뽑는 중...' : '질문 뽑기'}\n          </button>\n          \n          <button \n            className=\"reset-button\"\n            onClick={reset}\n          >\n            리셋\n          </button>\n        </div>\n\n        {history.length > 0 && (\n          <div className=\"history\">\n            <h3>이전 질문들</h3>\n            <div className=\"history-list\">\n              {history.map((q, index) => (\n                <div key={index} className=\"history-item\">\n                  <span className=\"history-category\">{q.category}</span>\n                  <span className=\"history-text\">{q.text}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RandomKeywordPicker;"],"names":["questions","category","text","RandomKeywordPicker","availableQuestions","setAvailableQuestions","useState","currentQuestion","setCurrentQuestion","history","setHistory","isAnimating","setIsAnimating","showConfetti","setShowConfetti","_jsx","className","children","_jsxs","length","concat","onClick","pickRandomQuestion","setTimeout","randomIndex","Math","floor","random","selected","newAvailable","filter","_","index","alert","disabled","reset","map","q"],"sourceRoot":""}