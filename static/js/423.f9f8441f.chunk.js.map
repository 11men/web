{"version":3,"file":"static/js/423.f9f8441f.chunk.js","mappings":"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","sources":["components/sections/About/About.tsx","components/sections/Contribution/Contribution.tsx","components/sections/FAQ/FAQ.tsx","components/sections/Intro/Intro.tsx","components/sections/Routine/RoutineCalendar.tsx","components/sections/Routine/Routine.tsx","pages/MainPage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './About.css';\r\n\r\ninterface CardContent {\r\n    id: number;\r\n    title: string;\r\n    subtitle: string;\r\n    content: React.ReactNode;\r\n}\r\n\r\nconst About: React.FC = () => {\r\n    const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    // \"About 섹션\"에 도달했을 때 자동 스크롤을 한 번만 실행하기 위한 상태\r\n    const [hasForcedScroll, setHasForcedScroll] = useState(false);\r\n\r\n    // 카드 데이터\r\n    const cards: CardContent[] = [\r\n        {\r\n            id: 1,\r\n            title: '🪴 11맨: 함께 성장하는 공간',\r\n            subtitle: '“배우고, 공유하고, 함께 나아가는 개발자 커뮤니티”',\r\n            content: (\r\n                <div className=\"card-content-redesign\">\r\n                    <div className=\"card-point\">\r\n                        <span className=\"card-point-icon\">🌱</span>\r\n                        <div className=\"card-point-text\">\r\n                            <h4 className=\"card-point-keyword\">꾸준한 학습과 실천</h4>\r\n                            <p className=\"card-point-explanation\">\r\n                                매일 작은 목표를 통해 함께 <strong>성장하며</strong>, 어제보다 나은 오늘을 만들어요.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-point\">\r\n                        <span className=\"card-point-icon\">💡</span>\r\n                        <div className=\"card-point-text\">\r\n                            <h4 className=\"card-point-keyword\">자유로운 지식 공유</h4>\r\n                            <p className=\"card-point-explanation\">\r\n                                스터디, 경험담, Q&A로 서로의 성장을 돕는 <strong>집단 지성</strong>을 추구해요.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-point\">\r\n                        <span className=\"card-point-icon\">🔗</span>\r\n                        <div className=\"card-point-text\">\r\n                            <h4 className=\"card-point-keyword\">수평적 연결과 지지</h4>\r\n                            <p className=\"card-point-explanation\">\r\n                                부담 없는 분위기에서 <strong>관심사</strong>를 기반으로 자유롭게 교류하고 응원해요.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        },\r\n        // {\r\n        //     id: 2,\r\n        //     title: '🪴 우리는 이런 사람들이에요',\r\n        //     subtitle: '“매일 작은 커밋 🌱, 함께 큰 성장을 이루는 11맨입니다!”', // 부제목 수정\r\n        //     content: (\r\n        //         <>\r\n        //             {/* 내용 수정 */}\r\n        //             우리는 <strong>매일의 작은 실천</strong>(1일 1커밋!)으로 함께 성장하는 개발자 커뮤니티, 11맨입니다.<br />\r\n        //             각자의 자리에서 찍는 작은 점들이 모여 의미 있는 별자리를 만들듯, <br />\r\n        //             우리의 꾸준한 기록과 공유는 <strong>집단 지성의 힘</strong>을 발휘합니다. 🚀<br />\r\n        //             느슨하지만 끈끈한 연결 속에서, 따로 또 같이 시너지를 만들어갑니다.<br />\r\n        //         </>\r\n        //     ),\r\n        // },\r\n        {\r\n            id: 2,\r\n            title: '🌏 우리의 세계관은 이런 거야!',\r\n            subtitle: '“따로 또 같이, 느슨히 그럼에도 끈끈히!”',\r\n            content: (\r\n                <>\r\n                    우리 커뮤니티는 서로의 점(작은 행동)들이 연결되어<br />\r\n                    <strong>집단 지성의 숲</strong>을 만들어가는 공간이에요.<br />\r\n                    각자 다른 궤도를 돌지만, 같은 태양(목표)을 향해 움직이고 있죠. 🌟<br />\r\n                    작은 커밋들이 쌓여 큰 변화를 만든다는 믿음,<br />\r\n                    이게 바로 우리 세계관의 핵심!\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            id: 3,\r\n            title: '💡 우리 뭐 하고 있냐고?',\r\n            subtitle: '“작고 꾸준한 행동이 세상을 바꿀지도 몰라요!”',\r\n            content: (\r\n                <>\r\n                    <strong>하루 한 줄</strong>, 11루틴으로 꾸준히 기록하고 공유하며,<br />\r\n                    각자의 속도로 성장해요. 🌱<br />\r\n                    디스코드에서 매주 함께 모여 집중 타임도 갖고,<br />\r\n                    서로의 경험을 나누면서 <strong>공동의 성장</strong>을 만들어가고 있어요.<br />\r\n                    부담은 적고, 재미는 많아요. 😄\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            id: 4,\r\n            title: '🤝 함께하면 뭐가 좋을까?',\r\n            subtitle: '“너랑 같이라면, 더 멋질 거야!”',\r\n            content: (\r\n                <>\r\n                    <ul>\r\n                        <li>혼자보다 <strong>더 꾸준히</strong> 할 수 있어요.</li>\r\n                        <li>작은 기록도 <strong>누군가 응원</strong>해줘요.</li>\r\n                        <li>새로운 아이디어와 <strong>영감이 가득!</strong></li>\r\n                        <li>느슨하지만 든든한 <strong>동료들</strong>이 생겨요.</li>\r\n                    </ul>\r\n                    자, 이제 같이 잔디 심으러 가볼까요? 🌱\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    /**\r\n     * (1) IntersectionObserver로 \"About\" 섹션이 20% 정도 보이기 시작하면\r\n     *    -> 해당 섹션을 화면 중앙으로 이동. 단, 한 번만 실행\r\n     */\r\n    useEffect(() => {\r\n        const container = containerRef.current;\r\n        if (!container) return;\r\n\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                const entry = entries[0];\r\n                // About 섹션이 threshold(0.2) 이상으로 보이기 시작 && 아직 스크롤 실행 안 했다면\r\n                if (entry.isIntersecting && !hasForcedScroll) {\r\n                    // 뷰포트 중앙으로 스크롤하기 위한 계산\r\n                    const rect = container.getBoundingClientRect();\r\n                    // 현재 스크롤 위치\r\n                    const currentScrollY = window.pageYOffset || document.documentElement.scrollTop;\r\n                    // 컨테이너 중심 = 컨테이너의 상단 위치 + (컨테이너 높이 / 2)\r\n                    const containerCenterY = rect.top + currentScrollY + rect.height / 2;\r\n                    // 뷰포트의 중앙 위치 = 현재 스크롤 + (뷰포트 높이 / 2)\r\n                    const viewportCenterY = currentScrollY + window.innerHeight / 2;\r\n\r\n                    // 스크롤해야 하는 위치(컨테이너의 중심 - 뷰포트의 절반)\r\n                    const offsetToCenter = containerCenterY - window.innerHeight / 2;\r\n\r\n                    window.scrollTo({\r\n                        top: offsetToCenter,\r\n                        behavior: 'smooth',\r\n                    });\r\n                    setHasForcedScroll(true);\r\n                }\r\n            },\r\n            {\r\n                threshold: 0.2, // About 섹션이 20% 이상 보이는 지점에서 트리거\r\n            }\r\n        );\r\n\r\n        observer.observe(container);\r\n\r\n        return () => {\r\n            observer.disconnect();\r\n        };\r\n    }, [hasForcedScroll]);\r\n\r\n    /**\r\n     * (2) 카드 초기 설정 & wheel/arrow 이벤트\r\n     */\r\n    useEffect(() => {\r\n        const container = containerRef.current;\r\n        if (!container) return;\r\n\r\n        const cardItems = Array.from(\r\n            container.querySelectorAll<HTMLDivElement>('.stack-cards__item')\r\n        );\r\n\r\n        cardItems.forEach((card, idx) => {\r\n            if (idx > 0) {\r\n                card.classList.add('slide-up');\r\n            }\r\n        });\r\n\r\n        const showNextCard = (currentIndex: number) => {\r\n            const total = cardItems.length;\r\n            // 다음 카드로 이동 (마지막 카드에서 처음으로 순환)\r\n            const nextIndex = (currentIndex + 1) % total;\r\n            if (currentIndex === cardItems.length -1 && nextIndex === 0) {\r\n                // 이 부분은 순환을 막고 싶다면 조건을 추가하거나,\r\n                // 현재는 순환되도록 둡니다 (하단 화살표와 동일한 로직).\r\n                // 만약 이 클릭 방식으로는 순환시키고 싶지 않다면 아래와 같이 수정:\r\n                // if (currentIndex < cardItems.length - 1) {\r\n                //   cardItems[currentIndex].classList.add('slide-up');\r\n                //   cardItems[currentIndex + 1].classList.remove('slide-up');\r\n                // }\r\n                // 여기서는 기존 showNextCard/showPrevCard의 순환 로직을 따르겠습니다.\r\n            }\r\n            cardItems[currentIndex].classList.add('slide-up');\r\n            cardItems[nextIndex].classList.remove('slide-up');\r\n        };\r\n\r\n        const showPrevCard = (currentIndex: number) => {\r\n            const total = cardItems.length;\r\n            // 이전 카드로 이동 (첫 카드에서 마지막으로 순환)\r\n            const prevIndex = (currentIndex - 1 + total) % total;\r\n            if (currentIndex === 0 && prevIndex === cardItems.length -1) {\r\n                // 순환을 막고 싶다면 조건 추가\r\n                // if (currentIndex > 0) {\r\n                //    cardItems[currentIndex].classList.add('slide-up');\r\n                //    cardItems[currentIndex - 1].classList.remove('slide-up');\r\n                // }\r\n            }\r\n            cardItems[currentIndex].classList.add('slide-up');\r\n            cardItems[prevIndex].classList.remove('slide-up');\r\n        };\r\n\r\n        function handleCardWheel(this: HTMLDivElement, e: WheelEvent) {\r\n            const el = e.currentTarget as HTMLDivElement;\r\n            const { scrollTop, scrollHeight, clientHeight } = el;\r\n            const isAtTop = scrollTop === 0;\r\n            const isAtBottom = scrollTop + clientHeight >= scrollHeight -1; // -1은 스크롤 정밀도 문제 보정\r\n\r\n            if (!isAtTop && !isAtBottom) {\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            const cardItem = el.closest('.stack-cards__item');\r\n            if (!cardItem) return;\r\n            const cardIndex = cardItems.indexOf(cardItem as HTMLDivElement);\r\n            if (cardIndex < 0) return;\r\n\r\n            if (isAtBottom && e.deltaY > 0) {\r\n                e.preventDefault();\r\n                showNextCard(cardIndex);\r\n            }\r\n            if (isAtTop && e.deltaY < 0) {\r\n                e.preventDefault();\r\n                showPrevCard(cardIndex);\r\n            }\r\n        }\r\n\r\n        function handleArrowClick(e: MouseEvent) {\r\n            e.preventDefault();\r\n            const arrowEl = e.currentTarget as HTMLDivElement;\r\n            const cardItem = arrowEl.closest('.stack-cards__item');\r\n            if (!cardItem) return;\r\n            const cardIndex = cardItems.indexOf(cardItem as HTMLDivElement);\r\n            if (cardIndex < 0) return;\r\n            showNextCard(cardIndex);\r\n        }\r\n\r\n\r\n        function handleCardRegionClick(this: HTMLDivElement, e: MouseEvent) {\r\n            const cardItem = this; // '.stack-cards__item'\r\n            const target = e.target as HTMLElement;\r\n\r\n            // 클릭된 요소가 화살표(.arrow-down)거나 그 자식이면, 화살표 자체의 클릭 핸들러가 처리\r\n            if (target.closest('.arrow-down')) {\r\n                return;\r\n            }\r\n\r\n            // ✨ 텍스트 영역 클릭 시에도 카드 이동을 허용하기 위해 아래 조건문 제거 또는 주석 처리\r\n            // const innerElement = cardItem.querySelector<HTMLDivElement>('.inner');\r\n            // if (innerElement && innerElement.contains(target) && target !== innerElement) {\r\n            //     return;\r\n            // }\r\n\r\n            const cardIndex = cardItems.indexOf(cardItem);\r\n            if (cardIndex < 0) return;\r\n\r\n            const rect = cardItem.getBoundingClientRect();\r\n            const clickYInCard = e.clientY - rect.top; // 카드 상단 기준 클릭 위치\r\n\r\n            if (clickYInCard < rect.height / 2) { // 카드 상단 절반 클릭\r\n                showPrevCard(cardIndex);\r\n            } else { // 카드 하단 절반 클릭\r\n                showNextCard(cardIndex);\r\n            }\r\n        }\r\n\r\n        cardItems.forEach((card) => {\r\n            const innerEl = card.querySelector<HTMLDivElement>('.inner');\r\n            const arrowEl = card.querySelector<HTMLDivElement>('.arrow-down');\r\n\r\n            if (innerEl) {\r\n                innerEl.addEventListener('wheel', handleCardWheel, { passive: false });\r\n            }\r\n            if (arrowEl) {\r\n                arrowEl.addEventListener('click', handleArrowClick);\r\n            }\r\n            // ✨ 각 카드 아이템에 새로운 클릭 이벤트 리스너 등록\r\n            card.addEventListener('click', handleCardRegionClick);\r\n        });\r\n\r\n        return () => {\r\n            cardItems.forEach((card) => {\r\n                const innerEl = card.querySelector<HTMLDivElement>('.inner');\r\n                const arrowEl = card.querySelector<HTMLDivElement>('.arrow-down');\r\n\r\n                if (innerEl) {\r\n                    innerEl.removeEventListener('wheel', handleCardWheel);\r\n                }\r\n                if (arrowEl) {\r\n                    arrowEl.removeEventListener('click', handleArrowClick);\r\n                }\r\n                // ✨ 등록된 리스너 제거\r\n                card.removeEventListener('click', handleCardRegionClick);\r\n            });\r\n        };\r\n    }, []); // 의존성 배열은 초기 설정대로 비워둡니다.\r\n\r\n\r\n    useEffect(() => {\r\n        const cardItems = Array.from(\r\n            containerRef.current?.querySelectorAll<HTMLDivElement>('.stack-cards__item') || []\r\n        );\r\n\r\n        if (cardItems.length === 0) return;\r\n\r\n        // IntersectionObserver 콜백: entry.isIntersecting 지표로 visible 토글\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                entries.forEach(entry => {\r\n                    const el = entry.target as HTMLDivElement;\r\n                    if (entry.isIntersecting) {\r\n                        el.classList.add('visible');\r\n                    } else {\r\n                        el.classList.remove('visible');\r\n                    }\r\n                });\r\n            },\r\n            {\r\n                root: null,\r\n                threshold: 0.3, // 카드가 30% 보이기 시작하면 콜백 실행\r\n            }\r\n        );\r\n\r\n        cardItems.forEach(card => observer.observe(card));\r\n\r\n        return () => {\r\n            observer.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"about\" className=\"about-page-container\" ref={containerRef}>\r\n            <div className=\"stack-cards\">\r\n                {cards.map((card) => (\r\n                    <div className=\"stack-cards__item\" key={card.id}>\r\n                        <div className=\"inner\">\r\n                            <h3>{card.title}</h3>\r\n                            <blockquote>{card.subtitle}</blockquote>\r\n                            <p>{card.content}</p>\r\n\r\n                            {/* 카드 하단에 화살표 아이콘(또는 텍스트) */}\r\n                            <div className=\"arrow-down\">\r\n                                ⬇\r\n                                {card.id === 1 && ( // 첫 번째 카드에만 안내 문구 추가\r\n                                    <span className=\"navigation-hint\">\r\n                                        아래로 스크롤하거나 화살표를 클릭해 보세요!\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"counter\">\r\n                                {card.id}/{cards.length}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"shadow\" />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","// src/sections/Contribution/Contribution.tsx\r\nimport React from 'react';\r\nimport './Contribution.css';\r\n\r\nconst Contribution: React.FC = () => {\r\n    const getRandomColor = () => {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    const handleImgError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n        const bg = getRandomColor();\r\n        const svg = `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\">\r\n                <circle cx=\"32\" cy=\"32\" r=\"32\" fill=\"${bg}\"/>\r\n                <text x=\"32\" y=\"42\" font-size=\"32\" text-anchor=\"middle\" fill=\"#fff\" font-family=\"Arial, sans-serif\">?</text>\r\n            </svg>\r\n        `;\r\n        e.currentTarget.src = 'data:image/svg+xml;utf8,' + encodeURIComponent(svg);\r\n        e.currentTarget.alt = '프로필 이미지 없음';\r\n    };\r\n\r\n    return (\r\n        <section className=\"contribution-page\">\r\n            <div className=\"divider\" />\r\n\r\n            <div className=\"contribution-container\">\r\n                <span className=\"contribution-label\">Contributed by</span>\r\n                <div className=\"contributors-list\">\r\n                    {/* renechoi 카드 */}\r\n                    <div className=\"contributor-card\">\r\n                        <a\r\n                            href=\"https://github.com/renechoi\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"contributor-link\"\r\n                        >\r\n                            <div className=\"profile-wrapper\">\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/images/face/rene.png'}\r\n                                    alt=\"renechoi 프로필\"\r\n                                    className=\"profile-img\"\r\n                                    onError={handleImgError}\r\n                                />\r\n                            </div>\r\n                            <span className=\"contributor-name\">renechoi</span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    {/* kdelay 카드 */}\r\n                    <div className=\"contributor-card\">\r\n                        <a\r\n                            href=\"https://github.com/kdelay\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"contributor-link\"\r\n                        >\r\n                            <div className=\"profile-wrapper\">\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/images/face/kdelay.png'}\r\n                                    alt=\"kdelay 프로필\"\r\n                                    className=\"profile-img\"\r\n                                    onError={handleImgError}\r\n                                />\r\n                            </div>\r\n                            <span className=\"contributor-name\">kdelay</span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"contributor-card\">\r\n                        <a\r\n                            href=\"https://github.com/vvoohhee\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"contributor-link\"\r\n                        >\r\n                            <div className=\"profile-wrapper\">\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/images/face/vvoohhee.png'}\r\n                                    alt=\"vvoohhee 프로필\"\r\n                                    className=\"profile-img\"\r\n                                    onError={handleImgError}\r\n                                />\r\n                            </div>\r\n                            <span className=\"contributor-name\">vvoohhee</span>\r\n                        </a>\r\n                    </div>\r\n                    \r\n                    <div className=\"contributor-card\">\r\n                        <a\r\n                            href=\"https://github.com/KrongDev\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"contributor-link\"\r\n                        >\r\n                            <div className=\"profile-wrapper\">\r\n                                <img\r\n                                    src={'https://avatars.githubusercontent.com/u/138358867?s=40&v=4'}\r\n                                    alt=\"KrongDev 프로필\"\r\n                                    className=\"profile-img\"\r\n                                    onError={handleImgError}\r\n                                />\r\n                            </div>\r\n                            <span className=\"contributor-name\">KrongDev</span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    {/* who's next? 카드 */}\r\n                    <div className=\"contributor-card\">\r\n                        <a\r\n                            href=\"https://github.com/your-next-profile\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"contributor-link\"\r\n                        >\r\n                            <div className=\"profile-wrapper\">\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/images/face/another.png'}\r\n                                    alt=\"another 프로필\"\r\n                                    className=\"profile-img\"\r\n                                    onError={handleImgError}\r\n                                />\r\n                            </div>\r\n                            <span className=\"contributor-name\">who's next?</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Contribution;\r\n","import React, { useState } from 'react';\r\nimport './FAQ.css';\r\n\r\ninterface FAQItem {\r\n    id: number;\r\n    category: string;   // 카테고리 (탭 필터용)\r\n    signature: string;  // 함수 시그니처\r\n    summary: string;    // 간략 요약\r\n    answer: string;     // 답변 (HTML 태그 포함 가능)\r\n}\r\n\r\nconst faqData: FAQItem[] = [\r\n    {\r\n        id: 1,\r\n        category: 'join',\r\n        signature: 'public boolean isItFreeToJoin()',\r\n        summary: '멤버십 비용 없이 누구나 자유롭게 참여 가능한가요?',\r\n        answer: `// Yes! 11men은 누구나 자유롭게 참여할 수 있는 오픈 커뮤니티입니다.\r\n<span class=\"faq-highlight\">멤버십 비용은 없어요.</span> 다양한 프로젝트와 스터디에 자유롭게 합류 가능합니다.\r\n// 단, 정식 모집 기간이 따로 있어서 그때 신규 멤버를 모집합니다.\r\n`\r\n    },\r\n    {\r\n        id: 2,\r\n        category: 'meeting',\r\n        signature: 'public String howOftenDoWeMeet()',\r\n        summary: '모임은 얼마나 자주 진행되나요?',\r\n        answer: `// 기본적으로 <span class=\"faq-highlight\">주 1회 코어타임(온라인 미팅)</span> 형태로 만나고 있습니다.\r\n// 그 외에도 테코테코, 노앤써 등 오프라인/온라인 스터디나 프로젝트별 추가 모임이 있습니다.\r\n`\r\n    },\r\n    {\r\n        id: 3,\r\n        category: 'meeting',\r\n        signature: 'public int whatDoWeDoInCoreTime()',\r\n        summary: '코어타임에서는 무엇을 하나요?',\r\n        answer: `// 코어타임에서는 전체 멤버가 모여 각자의 진행 상황을 공유하고\r\n// 업무 분배나 협업 관련 이슈를 논의합니다.\r\n// 짧은 시간이라도 함께 모여 공통 관심사를 체크하는 것이 핵심입니다.\r\n`\r\n    },\r\n    {\r\n        id: 4,\r\n        category: 'tech',\r\n        signature: 'public boolean doIHaveToCodeInJava()',\r\n        summary: 'Java만 사용해야 하나요?',\r\n        answer: `// 특정 언어를 강제하지는 않습니다. Java, Kotlin, JavaScript, TypeScript 등\r\n// 다양한 스택으로 활동하고 있습니다.\r\n// 원하는 언어와 스택을 팀 내에서 자유롭게 논의 후 선택하시면 됩니다.\r\n`\r\n    },\r\n    {\r\n        id: 5,\r\n        category: 'join',\r\n        signature: 'public String isAttendanceMandatory()',\r\n        summary: '출석이 필수인가요?',\r\n        answer: `// 절대적인 강제성은 없지만, 꾸준한 참여가 가장 중요합니다.\r\n// 팀 프로젝트나 스터디에 합류했다면, 최대한 성실하게 참여 해주셔야\r\n// 함께 시너지를 낼 수 있습니다.\r\n`\r\n    },\r\n];\r\n\r\nconst FAQ: React.FC = () => {\r\n    const [openFAQIds, setOpenFAQIds] = useState<number[]>([]);\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('all');\r\n    const [searchTerm, setSearchTerm] = useState<string>('');\r\n\r\n    const toggleFAQ = (id: number) => {\r\n        setOpenFAQIds(prev =>\r\n            prev.includes(id) ? prev.filter(item => item !== id) : [...prev, id]\r\n        );\r\n    };\r\n\r\n    // 탭 카테고리 목록\r\n    const categories = [\r\n        { key: 'all', label: '전체' },\r\n        { key: 'join', label: '가입/참여' },\r\n        { key: 'meeting', label: '모임 일정' },\r\n        { key: 'tech', label: '기술' },\r\n    ];\r\n\r\n    // 카테고리 + 검색어 필터링\r\n    const filteredFaqData = faqData\r\n        .filter(item =>\r\n            selectedCategory === 'all' ? true : item.category === selectedCategory\r\n        )\r\n        .filter(item => {\r\n            if (!searchTerm.trim()) return true;\r\n            const keyword = searchTerm.trim().toLowerCase();\r\n            return (\r\n                item.signature.toLowerCase().includes(keyword) ||\r\n                item.summary.toLowerCase().includes(keyword) ||\r\n                item.answer.toLowerCase().includes(keyword)\r\n            );\r\n        });\r\n\r\n    return (\r\n        <div id=\"faq\" className=\"faq-page\">\r\n            {/* 헤더 */}\r\n            <header className=\"faq-header\">\r\n                <h1 className=\"faq-title\">FAQ</h1>\r\n                <p className=\"faq-subtitle\">\r\n                    <strong>자주 묻는 질문들</strong>\r\n                </p>\r\n            </header>\r\n\r\n            {/* 검색창 */}\r\n            <div className=\"faq-search-wrapper\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"faq-search-input\"\r\n                    placeholder=\"키워드로 질문 검색...\"\r\n                    value={searchTerm}\r\n                    onChange={e => setSearchTerm(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            {/* 탭 UI */}\r\n            <div className=\"faq-tabs\">\r\n                {categories.map(cat => (\r\n                    <button\r\n                        key={cat.key}\r\n                        className={`faq-tab ${\r\n                            selectedCategory === cat.key ? 'active' : ''\r\n                        }`}\r\n                        onClick={() => setSelectedCategory(cat.key)}\r\n                    >\r\n                        {cat.label}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {/* FAQ 목록 */}\r\n            <div className=\"faq-container\">\r\n                {filteredFaqData.length === 0 ? (\r\n                    <div className=\"faq-no-results\">\r\n                        해당 조건에 맞는 질문이 없습니다.\r\n                    </div>\r\n                ) : (\r\n                    filteredFaqData.map(faq => (\r\n                        <div\r\n                            key={faq.id}\r\n                            className={`faq-item ${\r\n                                openFAQIds.includes(faq.id) ? 'open' : ''\r\n                            }`}\r\n                        >\r\n                            {/* 질문 줄 (아이콘 + 시그니처) */}\r\n                            <div\r\n                                className=\"faq-signature-line\"\r\n                                onClick={() => toggleFAQ(faq.id)}\r\n                                role=\"button\"\r\n                                aria-expanded={openFAQIds.includes(faq.id)}\r\n                            >\r\n                                <span className=\"faq-icon\">❓</span>\r\n                                <span className=\"faq-code-block\">\r\n                  {faq.signature} &#123;\r\n                </span>\r\n                                <span className=\"faq-fold-icon\">\r\n                  {openFAQIds.includes(faq.id) ? '▼' : '▶'}\r\n                </span>\r\n                                <span className=\"faq-brace-close\">&#125;</span>\r\n                            </div>\r\n\r\n                            {openFAQIds.includes(faq.id) ? (\r\n                                /* 펼친 상태: 요약(회색, 이탤릭) + 답변(HTML 포함) */\r\n                                <div className=\"faq-answer-block\">\r\n                                    <div\r\n                                        className=\"faq-summary\"\r\n                                        style={{\r\n                                            color: '#aaa',\r\n                                            fontStyle: 'italic',\r\n                                            marginBottom: '0.5rem',\r\n                                        }}\r\n                                    >\r\n                                        {faq.summary}\r\n                                    </div>\r\n                                    <div\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: `<pre>${faq.answer}</pre>`,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                /* 접힌 상태: summary만 보여주기 */\r\n                                <div className=\"faq-summary\">{faq.summary}</div>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n\r\n\r\n            <div id=\"contact-cta\" className=\"faq-cta-section\">\r\n                <h2 className=\"cta-question\">궁금한 게 더 있으신가요?</h2>\r\n                <div className=\"cta-button-group\">\r\n                    <button className=\"cta-button kakao\">카카오톡 문의</button>\r\n                    <button className=\"cta-button coffee\">커피챗 해요 👋🏻</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FAQ;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Intro.css';\r\nimport Header from \"../../layout/Header\";\r\n\r\nconst Intro: React.FC = () => {\r\n    // 별똥별 표시 여부\r\n    const [showShootingStar, setShowShootingStar] = useState(true);\r\n\r\n    // 두 개의 타이핑 요소 레퍼런스\r\n    const typingLineLooseRef = useRef<HTMLDivElement | null>(null); // \"느슨히 느슨히...\" 문구\r\n    const typingLineRef = useRef<HTMLDivElement | null>(null);      // \"작고 꾸준한...\" 문구\r\n\r\n    // 11MenZ 노출 상태\r\n    const [show11MenZ, setShow11MenZ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // (1) 초반 2초간 별똥별 애니메이션이 지나가도록\r\n        //     2초 뒤 showShootingStar=false → 별똥별 제거 + 타이핑 시작\r\n        const starTimer = setTimeout(() => {\r\n            setShowShootingStar(false);\r\n            startTypingEffect();  // 별똥별 사라진 다음 타이핑 진행\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearTimeout(starTimer);\r\n        };\r\n    }, []);\r\n\r\n    // 별똥별이 끝난 뒤에야 실행할 타이핑 로직\r\n    const startTypingEffect = () => {\r\n        const looseText = '느슨히 느슨히, 그리고 끈끈히';\r\n        const mainText = '작고 꾸준한 행동이 모여, 집단 지성을 이루는 생태계';\r\n        const typingSpeed = 60; // 타이핑 속도\r\n\r\n        // 문자를 하나씩 찍어주는 유틸 함수\r\n        function typeText(\r\n            text: string,\r\n            element: HTMLDivElement | null,\r\n            onComplete?: () => void\r\n        ) {\r\n            if (!element) return;\r\n            let i = 0;\r\n            const typing = () => {\r\n                if (i < text.length) {\r\n                    element.textContent += text.charAt(i);\r\n                    i++;\r\n                    setTimeout(typing, typingSpeed);\r\n                } else {\r\n                    onComplete && onComplete();\r\n                }\r\n            };\r\n            typing();\r\n        }\r\n\r\n        function addBlinkCursor(element: HTMLDivElement | null) {\r\n            if (!element) return;\r\n            removeBlinkCursor(element);\r\n\r\n            const cursorSpan = document.createElement('span');\r\n            cursorSpan.className = 'blink-cursor';\r\n            cursorSpan.textContent = '|';\r\n            element.appendChild(cursorSpan);\r\n        }\r\n\r\n        function removeBlinkCursor(element: HTMLDivElement | null) {\r\n            if (!element) return;\r\n            const existing = element.querySelector('.blink-cursor');\r\n            if (existing) {\r\n                existing.remove();\r\n            }\r\n        }\r\n\r\n        const looseEl = typingLineLooseRef.current;\r\n        const mainEl = typingLineRef.current;\r\n        if (!looseEl || !mainEl) return;\r\n\r\n        // (A) \"느슨히 느슨히…\" 먼저 타이핑\r\n        typeText(looseText, looseEl, () => {\r\n            addBlinkCursor(looseEl);\r\n\r\n            // (B) 커서 잠시 보이고 제거 → \"작고 꾸준한...\" 타이핑\r\n            setTimeout(() => {\r\n                removeBlinkCursor(looseEl);\r\n\r\n                typeText(mainText, mainEl, () => {\r\n                    // 타이핑 완료 후 커서 다시 표시\r\n                    addBlinkCursor(mainEl);\r\n                    // 11MenZ 로고 표시\r\n                    setTimeout(() => {\r\n                        setShow11MenZ(true);\r\n                    }, 200);\r\n                });\r\n            }, 1500);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <section id=\"intro\" className=\"intro-section\">\r\n            {/* 별똥별(최초 로딩 시) */}\r\n            {showShootingStar && (\r\n                <div className=\"shooting-star\" />\r\n            )}\r\n\r\n            {/* 별똥별이 끝난 뒤 Header 표시(필요 시 조건부 렌더링 가능) */}\r\n            {!showShootingStar && <Header />}\r\n\r\n            {/* 우주 배경 애니메이션 레이어 */}\r\n            <div className=\"cosmic-scene\">\r\n                <div className=\"star\" style={{ '--star-top': '0.2', '--star-left': '0.15' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.6', '--star-left': '0.25' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.3', '--star-left': '0.8' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.75', '--star-left': '0.9' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.1', '--star-left': '0.3' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.4', '--star-left': '0.5' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.55', '--star-left': '0.7' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.8', '--star-left': '0.2' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.35', '--star-left': '0.85' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.65', '--star-left': '0.05' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.15', '--star-left': '0.6' } as React.CSSProperties}></div>\r\n                <div className=\"star\" style={{ '--star-top': '0.5', '--star-left': '0.95' } as React.CSSProperties}></div>\r\n\r\n\r\n                <div className=\"orbit-container orbit-1 fade-in-orbit\">\r\n                    <div className=\"orbit orbit-1-anim\">\r\n                        <div className=\"planet planet-1\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"orbit-container orbit-2 fade-in-orbit\">\r\n                    <div className=\"orbit orbit-2-anim\">\r\n                        <div className=\"planet planet-2\"></div>\r\n                        <div className=\"planet planet-3\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"orbit-container orbit-3 fade-in-orbit\">\r\n                    <div className=\"orbit elliptical-orbit\">\r\n                        <div className=\"planet planet-4\"></div>\r\n                        <div className=\"planet planet-5\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"orbit-container orbit-4 fade-in-orbit\">\r\n                    <div className=\"orbit orbit-4-anim\">\r\n                        <div className=\"planet planet-6\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 기존 혜성들 */}\r\n                <div className=\"comet\"></div>\r\n                <div className=\"comet comet-delay\"></div>\r\n            </div>\r\n\r\n            <div className=\"intro-content\">\r\n                {/* 11MenZ - 통통 튀듯 떨어지는 애니메이션 (조건부 클래스 적용) */}\r\n                <div className={`skew-heading-wrapper ${show11MenZ ? 'drop-bounce' : ''}`}>\r\n                    <h1 data-heading=\"11men\">\r\n                        11men\r\n                    </h1>\r\n                </div>\r\n\r\n                {/* \"느슨히 느슨히...\" */}\r\n                <div className=\"text-typing-container typing-loose\">\r\n                    <div id=\"typingLineLoose\" className=\"type-line\" ref={typingLineLooseRef} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                {/* \"작고 꾸준한...\" */}\r\n                <div className=\"text-typing-container typing-main\">\r\n                    <div id=\"typingLineMain\" className=\"type-line\" ref={typingLineRef} />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Intro;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './RoutineCalendar.css'; // 기존 CSS 파일 위치에 맞게 경로를 조정하세요\r\n\r\nconst RoutineCalendar: React.FC = () => {\r\n    // (1) 타이핑 로직용 상태들\r\n    const messages = [\r\n        '“작은 목표를 설정해보세요!”',\r\n        '“새로운 커밋을 도전해볼 시간✨”',\r\n        '“오늘은 휴식도 필요해요, 잠깐 쉬어갈까요?”',\r\n    ];\r\n    const [messageIndex, setMessageIndex] = useState(0);\r\n    const [typedText, setTypedText] = useState('');\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n    // (2) 현재 MONTH YEAR 구하기\r\n    const getCurrentMonthYear = () => {\r\n        const now = new Date();\r\n        const opts: Intl.DateTimeFormatOptions = { month: 'long', year: 'numeric' };\r\n        return now.toLocaleDateString('en-US', opts).toUpperCase();\r\n    };\r\n    const [monthYear, setMonthYear] = useState(getCurrentMonthYear());\r\n\r\n    // (3) 타이핑/삭제 애니메이션 로직\r\n    useEffect(() => {\r\n        const currentMessage = messages[messageIndex];\r\n        const typingSpeed = 100;\r\n        const deletingSpeed = 60;\r\n        const holdDelay = 1500;\r\n        const extraPauseAfterDelete = 1000;\r\n        let timer: NodeJS.Timeout;\r\n\r\n        if (!isDeleting) {\r\n            if (typedText.length < currentMessage.length) {\r\n                timer = setTimeout(() => {\r\n                    setTypedText(currentMessage.slice(0, typedText.length + 1));\r\n                }, typingSpeed);\r\n            } else {\r\n                timer = setTimeout(() => {\r\n                    setIsDeleting(true);\r\n                }, holdDelay);\r\n            }\r\n        } else {\r\n            if (typedText.length > 0) {\r\n                timer = setTimeout(() => {\r\n                    setTypedText(currentMessage.slice(0, typedText.length - 1));\r\n                }, deletingSpeed);\r\n            } else {\r\n                timer = setTimeout(() => {\r\n                    setIsDeleting(false);\r\n                    setMessageIndex((prev) => (prev + 1) % messages.length);\r\n                }, extraPauseAfterDelete);\r\n            }\r\n        }\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [typedText, isDeleting, messageIndex, messages]);\r\n\r\n    return (\r\n        <section id=\"routine\" className=\"routine-section\">\r\n            <div className=\"routine-content\">\r\n                <div className=\"routine-calendar-wrapper\">\r\n                    <div className=\"calendar-container\">\r\n                        <div className=\"calendar-header\">\r\n                            <div className=\"calendar-dot\"></div>\r\n                            <div className=\"month-year\">\r\n                                <span className=\"arrow\">{'<'}</span>\r\n                                <span className=\"month-text\">{monthYear}</span>\r\n                                <span className=\"arrow\">{'>'}</span>\r\n                            </div>\r\n                            <div className=\"calendar-grid-icon\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"calendar-days\">\r\n                            <div>S</div>\r\n                            <div>M</div>\r\n                            <div>T</div>\r\n                            <div>W</div>\r\n                            <div>T</div>\r\n                            <div>F</div>\r\n                            <div>S</div>\r\n                        </div>\r\n\r\n                        <div className=\"calendar-dates\">\r\n                            <div className=\"date-cell\">1</div>\r\n\r\n                            <div className=\"date-cell circle-dates\">\r\n                                <span className=\"check-mark\">✓</span>\r\n                                2\r\n                                <div className=\"coretime-label\">모각코 🔥</div>\r\n                            </div>\r\n\r\n                            <div className=\"date-cell\">3</div>\r\n                            <div className=\"date-cell\">4</div>\r\n                            <div className=\"date-cell\">5</div>\r\n\r\n                            <div className=\"date-cell highlight-sunday\">\r\n                                6\r\n                                <div className=\"teko-label\">테코테코 🧩</div>\r\n                            </div>\r\n\r\n                            <div className=\"date-cell\">7</div>\r\n                            <div className=\"date-cell\">8</div>\r\n                            <div className=\"date-cell\">9</div>\r\n\r\n                            <div className=\"date-cell date-with-popup\">\r\n                                10\r\n                                <div className=\"popup-bubble\">\r\n                                    <div className=\"popup-arrow\"></div>\r\n                                    <div className=\"popup-content\">\r\n                                        <div className=\"popup-placeholder\">\r\n                                            {typedText.length > 0 ? (\r\n                                                <>\r\n                                                    <span className=\"typed-text\">{typedText}</span>\r\n                                                    <span className=\"cursor\"></span>\r\n                                                </>\r\n                                            ) : (\r\n                                                <span className=\"placeholder-text\">New Event</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"date-cell\">11</div>\r\n                            <div className=\"date-cell\">12</div>\r\n                            <div className=\"date-cell\">13</div>\r\n\r\n                            <div className=\"date-cell literature-date\">\r\n                                14\r\n                                <div className=\"literature-label\">문학의 밤 🏖</div>\r\n                            </div>\r\n\r\n                            {/* 다음 주 (15~21) */}\r\n                            <div className=\"date-cell\">15</div>\r\n                            <div className=\"date-cell\">16</div>\r\n                            <div className=\"date-cell\">17</div>\r\n                            <div className=\"date-cell\">18</div>\r\n                            <div className=\"date-cell\">19</div>\r\n\r\n                            <div className=\"date-cell highlight-sunday\">\r\n                                20\r\n                                <div className=\"teko-label\">테코테코 🧩</div>\r\n                            </div>\r\n                            <div className=\"date-cell\">21</div>\r\n\r\n                            <div className=\"date-cell devlog-date\">\r\n                                22\r\n                                <div className=\"devlog-label\">Devlog</div>\r\n                            </div>\r\n\r\n                            <div className=\"date-cell\">23</div>\r\n                            <div className=\"date-cell\">24</div>\r\n                            <div className=\"date-cell\">25</div>\r\n                            <div className=\"date-cell\">26</div>\r\n\r\n                            <div className=\"date-cell highlight-sunday\">\r\n                                27\r\n                                <div className=\"teko-label\">테코테코 🧩</div>\r\n                            </div>\r\n\r\n                            <div className=\"date-cell\">28</div>\r\n                            <div className=\"date-cell\">29</div>\r\n                            <div className=\"date-cell\">30</div>\r\n\r\n                            <div className=\"date-cell circle-dates\">\r\n                                <span className=\"check-mark\">✓</span>\r\n                                31\r\n                                <div className=\"coretime-label\">모각코 🔥</div>\r\n                            </div>\r\n\r\n                            <div className=\"date-cell empty\"></div>\r\n                            <div className=\"date-cell empty\"></div>\r\n                            <div className=\"date-cell empty\"></div>\r\n                            <div className=\"date-cell empty\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"calendar-info-bar\">\r\n                            <div className=\"info-label\">11men Routine</div>\r\n                            <div className=\"info-icon\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default RoutineCalendar;\r\n","import React, { useEffect} from 'react';\r\nimport './Routine.css';\r\nimport RoutineCalendar from \"./RoutineCalendar\";\r\n\r\n\r\nconst Routine: React.FC = () => {\r\n\r\n    useEffect(() => {\r\n        const sections = document.querySelectorAll('.white-box.reveal, .box-connector.reveal');\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        entry.target.classList.add('visible');\r\n                    } else {\r\n                        entry.target.classList.remove('visible');\r\n                    }\r\n                });\r\n            },\r\n            {threshold: 0.3}\r\n        );\r\n        sections.forEach(section => observer.observe(section));\r\n        return () => observer.disconnect();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"routine\" className=\"routine-page\">\r\n            <header className=\"header-section\">\r\n                {/* ★ 변경됨: Apple 스타일의 타이포그래피 개선 */}\r\n                <div className=\"header-content\">\r\n                    <h1 className=\"header-title\">\r\n                        세상은 누군가의 커밋으로 만들어지고 있으니까\r\n                    </h1>\r\n                    <p className=\"header-sub\">\r\n                        못하는 건 같이 하면 돼\r\n                    </p>\r\n                    <p className=\"header-sub\">\r\n                        문제는 목표도 의지도 아니야, <strong>시스템</strong>이야\r\n                    </p>\r\n                    <p className=\"header-sub\">\r\n                        각 자리의 별들이 만나면 별자리가 된다.\r\n                        <strong className=\"highlight-11men\"> 11men - ★</strong>\r\n                    </p>\r\n                </div>\r\n            </header>\r\n\r\n\r\n            {/* 헤더와 첫 섹션 사이 연결선 */}\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n            {/* 첫 번째 섹션 (텍스트 왼쪽 + 이미지 오른쪽) */}\r\n            <section className=\"white-box reveal\">\r\n                <div className=\"white-box-inner\">\r\n                    <div className=\"section-text-col\">\r\n                        <div className=\"text-large\">11 루틴 : 주 1회 모각코</div>\r\n                        <div className=\"text-small\">\r\n                            부담 없이 각자 작업에 집중하며<br/>\r\n                            함께 질문하고 답을 나눕니다.<br/>\r\n                            매주 모여 서로의 진척을 공유하고 동기를 얻습니다.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-image-col\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + '/images/developers.png'}\r\n                            alt=\"주 1회 온라인 코어타임 이미지\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n            {/* 두 번째 섹션 (이미지 오른쪽 → reverse) */}\r\n            <section className=\"white-box reveal\">\r\n                <div className=\"white-box-inner reverse\">\r\n                    <div className=\"section-image-col\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + '/images/005%20(1).png'}\r\n                            alt=\"테코테코 코테 모임 이미지\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"section-text-col\">\r\n                        <div className=\"text-large\">테코테코 - 코테를 뿌수다</div>\r\n                        <div className=\"text-small\">\r\n                            알고리즘을 함께 풀고 리뷰하는 매주 일요일 오전의 코테 모임.\r\n                            실전 문제풀이와 코드 리뷰 과정을 통해\r\n                            한 단계 더 성장할 수 있도록 도와줍니다.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            {/* 테코테코 섹션 이후, 노앤써 섹션 이전에 아래 코드를 복사하여 붙여넣으세요 */}\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n            {/* DEVLOG-14 섹션 */}\r\n            <section className=\"white-box reveal\">\r\n                <div className=\"white-box-inner\">\r\n                    <div className=\"section-text-col\">\r\n                        <div className=\"text-large\">DEVLOG-14</div>\r\n                        <div className=\"text-small\">\r\n                            격주에 한 번, 개발자 블로그 포스팅 챌린지 “Devlog-14”<br/>\r\n                            개발자들이 모여 주제별로 포스팅을 진행하며<br/>\r\n                            경험을 공유하고 성장하는 시간을 가집니다.<br/>\r\n                            블로그 글을 통해 지식을 정리하고<br/>\r\n                            네트워크를 넓혀보세요.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-image-col\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + '/images/devlog-14.png'}\r\n                            alt=\"DEVLOG-14 이미지\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n            {/* 세 번째 섹션 (텍스트 왼쪽) */}\r\n            <section className=\"white-box reveal\">\r\n                <div className=\"white-box-inner\">\r\n                    <div className=\"section-text-col\">\r\n                        <div className=\"text-large\">노앤써 - 시스템 디자인 스터디</div>\r\n                        <div className=\"text-small\">\r\n                            답이 없는 무한한 소프트웨어 개발의 세계.\r\n                            매주 일요일 오후에 모여 확장성과 안정성을 함께 고민하고,\r\n                            더 나은 시스템 아키텍처를 설계하기 위한\r\n                            다양한 시도들을 나눕니다.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-image-col\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + '/images/no-answer2.png'}\r\n                            alt=\"노앤써 시스템 디자인 스터디 이미지\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n            {/* 네 번째 섹션 (reverse) */}\r\n            <section className=\"white-box reveal\">\r\n                <div className=\"white-box-inner reverse\">\r\n                    <div className=\"section-image-col\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + '/images/any-question.png'}\r\n                            alt=\"무엇이든 물어보살 채널 이미지\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"section-text-col\">\r\n                        <div className=\"text-large\">무엇이든 물어보살 & 이슈 있슈</div>\r\n                        <div className=\"text-small\">\r\n                            개발하면서 혹은 일상 속에서 마주치는 크고 작은 문제들,\r\n                            해결에 대한 힌트를 서로 주고받는 채널입니다.\r\n                            이미 150건이 넘는 Q&A가 활발히 오가며 함께 성장하고 있습니다.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <div className=\"box-connector reveal\"></div>\r\n\r\n            {/* 다섯 번째 섹션 (텍스트 왼쪽) */}\r\n            <section className=\"white-box reveal\">\r\n                <div className=\"white-box-inner\">\r\n                    <div className=\"section-text-col\">\r\n                        <div className=\"text-large\">터닝페이지 : 정기적 회고 모임</div>\r\n                        <div className=\"text-small\">\r\n                            커리어와 삶에 대한 고민을 나누고, 서로의 인사이트를 배웁니다.\r\n                            정기적인 회고를 통해 우리의 현재 방향을 점검하고\r\n                            미래를 위한 로드맵을 함께 그려가는 시간입니다.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-image-col\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + '/images/turning-page.png'}\r\n                            alt=\"터닝페이지 정기적 회고 모임 이미지\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <div className=\"box-connector reveal\"></div>\r\n            <RoutineCalendar />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Routine;\r\n","import { Footer } from \"../components/layout\";\r\nimport { About, Contribution, FAQ, Intro, Routine } from \"../components/sections\";\r\n\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Intro />\r\n            <About/>\r\n            <Routine/>\r\n            <FAQ/>\r\n            <Contribution/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\nexport default MainPage;\r\n"],"names":["About","containerRef","useRef","hasForcedScroll","setHasForcedScroll","useState","cards","id","title","subtitle","content","_jsxs","className","children","_jsx","_Fragment","useEffect","container","current","observer","IntersectionObserver","entries","isIntersecting","rect","getBoundingClientRect","currentScrollY","window","pageYOffset","document","documentElement","scrollTop","containerCenterY","top","height","offsetToCenter","innerHeight","scrollTo","behavior","threshold","observe","disconnect","cardItems","Array","from","querySelectorAll","forEach","card","idx","classList","add","showNextCard","currentIndex","nextIndex","length","remove","showPrevCard","total","prevIndex","handleCardWheel","e","el","currentTarget","scrollHeight","clientHeight","isAtTop","isAtBottom","stopPropagation","cardItem","closest","cardIndex","indexOf","deltaY","preventDefault","handleArrowClick","handleCardRegionClick","target","this","clientY","innerEl","querySelector","arrowEl","addEventListener","passive","removeEventListener","_containerRef$current","entry","root","ref","map","Contribution","handleImgError","bg","getRandomColor","color","i","Math","floor","random","svg","concat","src","encodeURIComponent","alt","href","rel","process","onError","faqData","category","signature","summary","answer","FAQ","openFAQIds","setOpenFAQIds","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","filteredFaqData","filter","item","trim","keyword","toLowerCase","includes","type","placeholder","value","onChange","key","label","cat","onClick","faq","toggleFAQ","prev","role","style","fontStyle","marginBottom","dangerouslySetInnerHTML","__html","Intro","showShootingStar","setShowShootingStar","typingLineLooseRef","typingLineRef","show11MenZ","setShow11MenZ","starTimer","setTimeout","startTypingEffect","clearTimeout","typeText","text","element","onComplete","typing","textContent","charAt","addBlinkCursor","removeBlinkCursor","cursorSpan","createElement","appendChild","existing","looseEl","mainEl","Header","RoutineCalendar","messages","messageIndex","setMessageIndex","typedText","setTypedText","isDeleting","setIsDeleting","monthYear","setMonthYear","Date","toLocaleDateString","month","year","toUpperCase","currentMessage","timer","slice","Routine","sections","section","MainPage","Footer"],"sourceRoot":""}